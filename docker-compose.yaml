networks:
  app-network:
    driver: bridge

services:


  frontend:
    container_name: frontend_service_metaeditor
    image: nginx:alpine
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.routers.frontend.rule=Host(`${HOSTNAME}`)"
      # - "traefik.http.routers.frontend.entrypoints=websecure" # tls
      # - "traefik.http.routers.frontend.tls.certresolver=myresolver" # tls
      # - "traefik.http.middlewares.frontend.redirectscheme.scheme=https" # test autoredirect to https
    depends_on:
      - traefik
    env_file:
      - ./.env
    networks:
      - app-network
    volumes:
      - type: bind
        source: ./Editor/
        target: /usr/share/nginx/html

  traefik:
    container_name: traefik_service_metaeditor
    image: traefik
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      # - "--entrypoints.websecure.address=:443" # tls
      # - "--certificatesresolvers.myresolver.acme.tlschallenge=true" # tls
      # - "--certificatesresolvers.myresolver.acme.email=devops@metalovegame.one" # tls
      # - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json" # tls
    ports:
      - "80:80"
      # - "443:443" # tls
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt" # tls
    networks:
      - app-network

  backend:
    container_name: backend_service_metaeditor
    build:
      context: ./
      dockerfile: ./Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.backend.loadbalancer.server.port=3500"
      - "traefik.http.routers.backend.rule=Host(`${HOSTNAME}`)"
      # - "traefik.http.routers.backend.middlewares=backend-stripprefix"
      # - "traefik.http.routers.backend.entrypoints=websecure" # tls
      # - "traefik.http.routers.backend.tls.certresolver=myresolver" # tls
    depends_on:
      - traefik
    env_file:
      - ./.env
    networks:
      - app-network
    volumes:
      - type: bind
        source: ./
        target: /app